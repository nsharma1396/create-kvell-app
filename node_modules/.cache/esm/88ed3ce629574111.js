let resolve,chalk,mkdir,promisify;_295‍.x([["createDirectory",()=>createDirectory]]);_295‍.w("path",[["resolve",["resolve"],function(v){resolve=v}]]);_295‍.w("chalk",[["default",["chalk"],function(v){chalk=v}]]);_295‍.w("fs",[["mkdir",["mkdir"],function(v){mkdir=v}]]);_295‍.w("util",[["promisify",["promisify"],function(v){promisify=v}]]);




const log = _295‍.g.console.log;

const makeDirectory = promisify(mkdir);

       const createDirectory = (directoryName, databaseName) => {
  const currentPathURL = _295‍._.meta.url;
  const currentPathName = new URL(currentPathURL).pathname;
  const resolvedPath = resolve(
    currentPathName,
    "../../templates",
    databaseName
  );

  const templateFolderPath = resolvedPath;

  const projectDirectoryParentPath = process.cwd();
  const projectDirectoryPath = `${projectDirectoryParentPath}/${directoryName}`;

  log();
  log(
    `Creating new Node boilerplate in ${chalk.bold.green(
      projectDirectoryPath
    )} with database as ${chalk.bold.green(databaseName)}.`
  );
  log();

  // makeDirectory();
};
